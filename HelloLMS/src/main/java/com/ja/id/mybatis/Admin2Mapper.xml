<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ja.id.mybatis.Admin2Mapper">
	
	<select id="getLectureList" resultType="java.util.HashMap" parameterType="java.util.HashMap">
	    SELECT a.lxseq, a.lxnum, a.lxname, b.coxname, a.lxlink, a.lxfile, count(c.qxseq) qxcnt, b.coxname
		FROM lecture a
		LEFT OUTER JOIN quiz c
		ON a.lxseq = c.lxseq
		, course b
		WHERE a.coxseq = #{coxseq}
			AND a.coxseq = b.coxseq
		GROUP BY a.lxseq, a.lxnum, a.lxname, b.coxname, a.lxlink, a.lxfile, b.coxname
		ORDER BY a.lxnum asc
	</select>
	
	<select id="getHistory" resultType="java.util.HashMap" parameterType="java.util.HashMap">
		SELECT * 
		FROM lexstudylog a, lecture b
		WHERE a.mxseq = #{mxseq}
			AND a.lxseq = b.lxseq
			AND b.coxseq = #{coxseq}
	</select>
	
	<select id="modLecture" resultType="java.util.HashMap" parameterType="java.util.HashMap">
	    SELECT a.lxname, a.lxlink, a.lxfile, b.coxname, a.lxtype, a.lxnum
	    FROM lecture a
	    	LEFT OUTER JOIN course b
			ON a.coxseq = b.coxseq
  		WHERE a.coxseq = #{coxseq}
  		AND a.lxseq=#{lxseq}
	</select>
	
	<update id="lectureMod" parameterType="java.util.HashMap">
		UPDATE lecture
		SET regdate = regdate 
		<!-- <if test="lxname != null">
			, lxname=#{lxname}
		</if>
		<if test="lxlink != null">
	    	, lxlink=#{lxlink}
	    	, lxtype=#{lxtype}
	    </if>
	    <if test="lxfile != null">
	    	, lxfile=#{lxfile}
	    </if> -->
	    <choose>
			<when test='lxname != ""'>
				, lxname=#{lxname}
			</when>
			<when test='lxlink != ""'>
				, lxlink=#{lxlink}
	    		, lxtype=#{lxtype}
			</when>
			<when test='lxfile != ""'>
	    		, lxfile=#{lxfile}
			</when>
		</choose>
		WHERE coxseq=#{coxseq}
			AND lxseq=#{lxseq}
	</update>
	
	<update id="allApplyStatus" parameterType="java.util.HashMap">
		UPDATE apply
		SET
		<choose>
			<when test='status=="A"'>
				axstatus='A'
			</when>
			<when test='status=="C"'>
				axstatus='C'
			</when>
		</choose>
		WHERE coxseq = #{coxseq}
	</update>
	
	<select id="selectCode" resultType="java.util.HashMap" parameterType="java.util.HashMap">
		SELECT cxseq, cxgubun, cxcode, cxname
		FROM code
		WHERE cxseq is not null
	    	and cxgubun = '003'
		ORDER BY cxseq asc
	</select>
	
	<update id="updateFile" parameterType="java.util.HashMap">
		UPDATE lecture
		SET lxfile=#{fileName}
		WHERE coxseq=#{coxseq}
			AND lxseq=#{lxseq}
	</update>
	
	<delete id="lectureDel" parameterType="java.util.HashMap">
		DELETE FROM lecture
		WHERE coxseq=#{coxseq}
			AND lxseq=#{lxseq}
	</delete>
	
	<insert id="insertLecture" parameterType="java.util.HashMap">
		INSERT INTO lecture (lxnum, lxname, lxfile, regdate, coxseq, mxseq, lxtype, lxlink)
		VALUES (#{lxnum}, #{lxname}, #{fileName}, date_format(now(), '%Y%m%d'), #{coxseq}, #{USEQ}, #{lxtype}, #{lxlink})
	</insert>
	
	<select id="getApplyList" resultType="java.util.HashMap" parameterType="java.util.HashMap">
	    SELECT a.axstatus, a.regdate, a.axseq, b.coxname, c.mxname, c.mxid, c.mxseq
		FROM apply a
		  RIGHT OUTER JOIN course b
		  ON a.coxseq = b.coxseq
		  , member c
		WHERE a.coxseq=#{coxseq}
			AND a.mxseq = c.mxseq
	</select>
	
	<update id="statusUpdate" parameterType="java.util.HashMap">
		UPDATE apply
		SET
		<choose>
			<when test='status=="R"'>
				axstatus='A'
			</when>
			<when test='status=="A"'>
				axstatus='C'
			</when>
			<when test='status=="C"'>
				axstatus='A'
			</when>
		</choose>
		WHERE axseq = #{axseq}
	</update>

</mapper>