<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ja.id.mybatis.MyLectureMapper">
	
	<select id="getAllApplyCourse" resultType="java.util.HashMap" parameterType="java.util.HashMap">
	    SELECT b.axseq, b.coxseq, a.coxname, a.coxreqstart, a.coxreqend, b.regdate, b.axstatus
		FROM course a, apply b
		WHERE b.coxseq = a.coxseq
			and b.mxseq = #{USEQ}
			<!-- and DATE_FORMAT(NOW(), '%Y%m%d') between a.coxreqstart and a.coxreqend -->
		ORDER BY b.regdate asc
	</select>
	
	<delete id="applyCourseDelete" parameterType="java.util.HashMap">
		DELETE FROM apply
		WHERE coxseq=#{coxseq}
		AND mxseq=#{mxseq}
	</delete>
	
	<select id="getAllCourse" resultType="java.util.HashMap" parameterType="java.util.HashMap">
	    <!-- SELECT a.coxname, a.coxstart, a.coxend, c.mxname, a.coxprog, a.coxseq
		FROM course a, apply b, member c, tutor d
		WHERE b.coxseq = a.coxseq
			AND b.mxseq = #{USEQ}
			AND b.axstatus = 'A'
			AND a.tuxseq = d.tuxseq -->
		<!-- SELECT a.coxname, a.coxstart, a.coxend, a.coxprog, a.coxseq, d.mxname
		FROM course a
		  LEFT OUTER JOIN apply b
		  ON a.coxseq=b.coxseq
		  , tutor c, member d
		WHERE b.mxseq = #{USEQ}
		  AND b.axstatus='A'
		  AND a.tuxseq=c.tuxseq
		  AND c.mxseq = d.mxseq -->
		SELECT a.coxname, a.coxstart, a.coxend, a.coxprog, a.coxseq, d.mxname
		FROM course a, apply b, tutor c, member d
		WHERE a.coxseq=b.coxseq
			AND b.mxseq = #{USEQ}
		  AND b.axstatus='A'
			AND a.tuxseq=c.tuxseq
			AND c.mxseq = d.mxseq
		  AND DATE_FORMAT(NOW(), '%Y%m%d') between a.coxstart and a.coxend
	</select>
	
	<select id="getAllCnt" resultType="java.util.HashMap" parameterType="java.util.HashMap">
	    SELECT COUNT(*) AS cnt FROM lecture WHERE coxseq=#{coxseq}
	</select>
	
	<select id="getCnt" resultType="java.util.HashMap" parameterType="java.util.HashMap">
		SELECT count(a.regdate) AS cnt
		FROM lexstudy a
			LEFT OUTER JOIN lecture b
			ON a.lxseq = b.lxseq
				AND a.mxseq = #{USEQ}
    	WHERE b.coxseq=#{coxseq} AND a.mxseq=#{USEQ}
	</select>
	
	<select id="getLectrue" resultType="java.util.HashMap" parameterType="java.util.HashMap">
		SELECT c.coxname, c.coxseq, a.lxseq, a.lxnum, a.lxname, a.lxlink, a.lxfile, a.lxtype, b.regdate
		FROM lecture a
			LEFT OUTER JOIN lexstudy b
			ON a.lxseq = b.lxseq
				AND b.mxseq =1
			LEFT OUTER JOIN  course c
      		ON c.coxseq = a.coxseq
		WHERE a.coxseq = #{coxseq}
		ORDER BY a.lxnum asc
	</select>
	
	<select id="islexstudy" resultType="java.util.HashMap" parameterType="java.util.HashMap">
		SELECT regdate
	    FROM lexstudy
	    WHERE mxseq = #{USEQ} and lxseq=#{lxseq}
	</select>
	
	<insert id="lexstudyinsert" parameterType="java.util.HashMap">
		INSERT INTO
			lexstudy (regdate, lxseq, mxseq)
		VALUES (DATE_FORMAT(NOW(), '%Y%m%d'), #{lxseq}, #{USEQ})
	</insert>
	
	<update id="lexstudyupdate" parameterType="java.util.HashMap">
		UPDATE lexstudy
		SET regdate=DATE_FORMAT(NOW(), '%Y%m%d')
		WHERE mxseq = #{USEQ} and lxseq=#{lxseq}
	</update>
	
	<insert id="lexstudyloginsert" parameterType="java.util.HashMap">
		INSERT INTO
			lexstudylog (lxseq, mxseq)
		VALUES (#{lxseq}, #{USEQ})
	</insert>
	
</mapper>