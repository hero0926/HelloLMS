<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ja.id.mybatis.MyLectureMapper">
	
	<select id="getAllApplyCourse" resultType="java.util.HashMap" parameterType="java.util.HashMap">
	    SELECT b.axseq, b.coxseq, a.coxname, a.coxreqstart, a.coxreqend, b.regdate, b.axstatus, b.axresult, b.axscore
		FROM course a, apply b
		WHERE b.coxseq = a.coxseq
			and b.mxseq = #{USEQ}
			<!-- and DATE_FORMAT(NOW(), '%Y%m%d') between a.coxreqstart and a.coxreqend -->
		ORDER BY b.regdate asc
	</select>
	
	<select id="getHistory" resultType="java.util.HashMap" parameterType="java.util.HashMap">
		SELECT * 
		FROM lexstudylog a, lecture b
		WHERE a.mxseq = #{USEQ}
			AND a.lxseq = b.lxseq
			AND b.coxseq = #{coxseq}
	</select>
	
	<delete id="applyCourseDelete" parameterType="java.util.HashMap">
		DELETE FROM apply
		WHERE coxseq=#{coxseq}
		AND mxseq=#{mxseq}
	</delete>
	
	<select id="getAllCourse" resultType="java.util.HashMap" parameterType="java.util.HashMap">
	    <!-- SELECT a.coxname, a.coxstart, a.coxend, c.mxname, a.coxprog, a.coxseq
		FROM course a, apply b, member c, tutor d
		WHERE b.coxseq = a.coxseq
			AND b.mxseq = #{USEQ}
			AND b.axstatus = 'A'
			AND a.tuxseq = d.tuxseq -->
		<!-- SELECT a.coxname, a.coxstart, a.coxend, a.coxprog, a.coxseq, d.mxname
		FROM course a
		  LEFT OUTER JOIN apply b
		  ON a.coxseq=b.coxseq
		  , tutor c, member d
		WHERE b.mxseq = #{USEQ}
		  AND b.axstatus='A'
		  AND a.tuxseq=c.tuxseq
		  AND c.mxseq = d.mxseq -->
		SELECT a.coxname, a.coxstart, a.coxend, a.coxprog, a.coxseq, d.mxname, c.tuxpicture, c.tuxhistory, c.cnt
		FROM course a, apply b, tutor c, member d
		WHERE a.coxseq=b.coxseq
			AND b.mxseq = #{USEQ}
		  AND b.axstatus='A'
			AND a.tuxseq=c.tuxseq
			AND c.mxseq = d.mxseq
		  AND DATE_FORMAT(NOW(), '%Y%m%d') between a.coxstart and a.coxend
	</select>
	
	<select id="getAllCnt" resultType="java.util.HashMap" parameterType="java.util.HashMap">
	    SELECT COUNT(*) AS cnt FROM lecture WHERE coxseq=#{coxseq}
	</select>
	
	<select id="getCnt" resultType="java.util.HashMap" parameterType="java.util.HashMap">
		SELECT count(a.regdate) AS cnt
		FROM lexstudy a
			LEFT OUTER JOIN lecture b
			ON a.lxseq = b.lxseq
				AND a.mxseq = #{USEQ}
    	WHERE b.coxseq=#{coxseq} AND a.mxseq=#{USEQ}
	</select>
	
<!-- 	<select id="getLectrue" resultType="java.util.HashMap" parameterType="java.util.HashMap">
		SELECT c.coxname, c.coxseq, a.lxseq, a.lxnum, a.lxname, a.lxlink, a.lxfile, a.lxtype, b.regdate
		FROM lecture a
			LEFT OUTER JOIN lexstudy b
			ON a.lxseq = b.lxseq
				AND b.mxseq =#{USEQ}
			LEFT OUTER JOIN  course c
      		ON c.coxseq = a.coxseq
		WHERE a.coxseq = #{coxseq}
		ORDER BY a.lxnum asc
	</select> -->
	
	<select id="getLectrue" resultType="java.util.HashMap" parameterType="java.util.HashMap">
		<!-- SELECT c.coxname, c.coxseq, a.lxseq, a.lxnum,
			a.lxname, a.lxlink, a.lxfile, a.lxtype,
			b.regdate, count(d.qxseq) qxcnt, count(e.qaxseq) qaxcnt
		FROM lecture a
		LEFT OUTER JOIN lexstudy b
			ON a.lxseq = b.lxseq
			AND b.mxseq =#{USEQ}
		left outer join quiz d
			on a.lxseq = d.lxseq
		left outer join qxanswer e
			on d.qxseq = e.qxseq
			and e.mxseq = #{USEQ}
		, course c
		WHERE a.coxseq = #{coxseq}
			and c.coxseq = a.coxseq
		group by c.coxname, c.coxseq, a.lxseq, a.lxnum,
			a.lxname, a.lxlink, a.lxfile, a.lxtype,
			b.regdate
		order by a.lxnum -->
		SELECT c.coxname, c.coxseq, a.lxseq, a.lxnum,
			a.lxname, a.lxlink, a.lxfile, a.lxtype,
			b.regdate, count(d.qxseq) qxcnt, count(e.qaxseq) qaxcnt
		FROM lecture a
		LEFT OUTER JOIN lexstudy b
			ON a.lxseq = b.lxseq
			AND b.mxseq =#{USEQ}
		LEFT OUTER JOIN quiz d
			on a.lxseq = d.lxseq
		LEFT OUTER JOIN qxanswer e
			ON d.qxseq = e.qxseq
			AND e.mxseq = #{USEQ}
		, course c, apply f
		WHERE a.coxseq = #{coxseq}
			AND c.coxseq = a.coxseq
			AND f.mxseq=#{USEQ}
		GROUP BY c.coxname, c.coxseq, a.lxseq, a.lxnum,
			a.lxname, a.lxlink, a.lxfile, a.lxtype,
			b.regdate
		ORDER BY a.lxnum
	</select>
	
	<select id="islexstudy" resultType="java.util.HashMap" parameterType="java.util.HashMap">
		SELECT regdate
	    FROM lexstudy
	    WHERE mxseq = #{USEQ} and lxseq=#{lxseq}
	</select>
	
	<insert id="lexstudyinsert" parameterType="java.util.HashMap">
		INSERT INTO
			lexstudy (regdate, lxseq, mxseq)
		VALUES (DATE_FORMAT(NOW(), '%Y%m%d'), #{lxseq}, #{USEQ})
	</insert>
	
	<update id="lexstudyupdate" parameterType="java.util.HashMap">
		UPDATE lexstudy
		SET regdate=DATE_FORMAT(NOW(), '%Y%m%d')
		WHERE mxseq = #{USEQ} and lxseq=#{lxseq}
	</update>
	
	<insert id="lexstudyloginsert" parameterType="java.util.HashMap">
		INSERT INTO
			lexstudylog (lxseq, mxseq)
		VALUES (#{lxseq}, #{USEQ})
	</insert>
	
	<select id="selectTestpaper" resultType="java.util.HashMap" parameterType="java.util.HashMap">
		SELECT a.tpxseq, a.tpxtitle, a.tpxfrom, a.tpxto, a.tpxduring, a.tpx1cnt, a.tpx2cnt, a.tpx3cnt, 
		    a.tpx1score, a.tpx2score, a.tpx3score, b.coxname, a.coxseq, c.mxseq, 
		    date_format(now(), '%Y%m%d%H%i%s') thistime,
		    date_format(d.trxend, '%Y%m%d%H%i%s') trxend,
		    date_format(d.trxrest, '%Y%m%d%H%i%s') trxrest
				FROM testpaper a
		    left outer join testresult d
		    on a.tpxseq = d.tpxseq
		    and d.mxseq = #{USEQ}
		    , course b, apply c
		WHERE a.coxseq = b.coxseq
			AND b.coxseq = c.coxseq
			AND c.axstatus = 'A'
			AND c.mxseq = #{USEQ}
			AND c.coxseq = #{coxseq}
	</select>
	
	<select id="testpoolList" resultType="java.util.HashMap" parameterType="java.util.HashMap">
		SELECT a.mxseq, a.taxorder, a.taxanswer, b.txcont, b.tx1, b.tx2, b.tx3, b.tx4, b.tx5, b.txtype, b.txcorrect, a.taxseq, a.tpxseq, c.tpxduring, d.trxrest
		FROM testanswer a, testpool b, testpaper c, testresult d
		WHERE a.txseq = b.txseq
			AND c.tpxseq = a.tpxseq
			AND a.mxseq = #{USEQ}
			AND d.tpxseq = #{tpxseq}
			AND d.mxseq = #{USEQ}
		<choose>
         <when test="null != taxseq and '' !=taxseq ">
             and a.taxseq = #{taxseq}
         </when>
         <otherwise>
             AND c.tpxseq = #{tpxseq}
         </otherwise>
	    </choose>
		ORDER BY a.taxorder
	</select>
	
	<update id="updateAnswer" parameterType="java.util.HashMap">
		UPDATE testanswer
		SET taxanswer=#{taxanswer}
		WHERE taxseq=#{taxseq}
		<choose>
	        <when test="mode == submit">
	            and a.taxseq = #{taxseq}
	        </when>
	    </choose>
	</update>
	
	<update id="submitTest" parameterType="java.util.HashMap">
		UPDATE testresult
		SET trxend=date_format(now(), '%Y%m%d')
		WHERE tpxseq=#{tpxseq}
			AND mxseq=#{USEQ}
	</update>
	
	<select id="selectTestresult" resultType="java.util.HashMap" parameterType="java.util.HashMap">
		SELECT trxseq, tpxseq, mxseq, date_format(trxstart, '%Y%m%d%H%m%i') trxstart,  date_format(trxend, '%Y%m%d%H%m%i') trxend, trxrest, trxscore, regdate
		FROM testresult
		WHERE tpxseq=#{tpxseq}
		AND mxseq=#{USEQ}
	</select>
	
	<insert id="insertTestresult" parameterType="java.util.HashMap">
		INSERT INTO
			testresult (tpxseq, trxrest, mxseq)
		VALUES (#{tpxseq}, #{tpxduring}, #{USEQ})
	</insert>
	
	<update id="updateRest" parameterType="java.util.HashMap">
		UPDATE testresult
		SET trxrest=${trxrest}
		WHERE tpxseq=#{tpxseq}
			AND mxseq=#{USEQ}
	</update>
	
</mapper>